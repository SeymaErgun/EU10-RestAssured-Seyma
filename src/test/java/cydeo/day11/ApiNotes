Junit5 annotations
    //for detail check this website: https://junit.org/junit5/docs/current/user-guide/#overview
    //beforeClass is testNg version of beforeAll, same logic
    //beforeMethod is testNg version of beforeEach, same logic
    //@Disabled    -> to ignore the test


thanks to junit5 jupiter we can have parameterized tests annotations
Parameterization: you put some information, data to your method
So by the help of parameterization we can use Data Driven Testing -> main benefit
(you can use everywhere, not just api)

@ParameterizedTest
@ValueSource
        provide these kind of data: short, byte, int, long, float, double, char, boolean, java.lang.String, java.lang.Class
        then your test case will run based on each of the data that you provided.
        buraya girdiğin her data için ayrı bir test çalışacak. sanki bir loop gibi. kaç numara yazdıysan o kadar test run olacak.

        @ParameterizedTest
            @ValueSource(ints = {1,3,5,6,7,9,10,5,21,32})
            public void testMultipleNumbers(int number){

                System.out.println("number = " + number);
                Assertions.assertTrue(number > 5);
            }
        *With this annotation you can say that
        I know how to implement Data Driven Testing with Junit5. I know how to provide parameters,
        and run the same test case with different input.

        Also Data Driven Test with Cucumber and RestAssured: get username and password from database, use them to login api. and get the token and do something. verify sth





@MethodSource

*Csv : file extension, simple version of excel tables, just data. not colors, not fancy.
       it stands for comma seperated values.
       For using excel, we need dependencies etc. but for using Csv we can just use these junit5 annotations:
@CsvSource
@CsvFileSource